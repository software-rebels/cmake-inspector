// SDG
digraph {
	graph [ordering=out]
	subgraph cluster_0 {
		"${CMAKE_AUTOMOC}" [label="${CMAKE_AUTOMOC}" shape=cds]
		"SELECT_${CMAKE_AUTOMOC}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${BUILD_EXAMPLES}" [label="${BUILD_EXAMPLES}" shape=cds]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${CMAKE_CURRENT_SOURCE_DIR}_4" [label="${CMAKE_CURRENT_SOURCE_DIR}_4" shape=cds]
		"${CMAKE_CURRENT_SOURCE_DIR}" [label="${CMAKE_CURRENT_SOURCE_DIR}" shape=cds]
		"${CMAKE_CURRENT_SOURCE_DIR}/cmake/" [label=CONCAT shape=doubleoctagon]
		"${CMAKE_MODULE_PATH}" [label="${CMAKE_MODULE_PATH}" shape=cds]
		"/cmake/" [label="/cmake/" shape=ellipse]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}_2" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${CMAKE_CURRENT_SOURCE_DIR}_5" [label="${CMAKE_CURRENT_SOURCE_DIR}_5" shape=cds]
		"./KDE/snoretoast/examples/qt_2" [label="./KDE/snoretoast/examples/qt_2" shape=ellipse]
		"./KDE/snoretoast/" [label="./KDE/snoretoast/" shape=ellipse]
		"./KDE/snoretoast/examples_2" [label="./KDE/snoretoast/examples_2" shape=ellipse]
		"SELECT_${CMAKE_CXX_STANDARD}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${CMAKE_CXX_STANDARD}_2" [label="${CMAKE_CXX_STANDARD}_2" shape=cds]
		"${CMAKE_CXX_STANDARD}" [label="${CMAKE_CXX_STANDARD}" shape=cds]
		17 [label=17 shape=ellipse]
		11 [label=11 shape=ellipse]
		"SELECT_${CMAKE_INCLUDE_CURRENT_DIR}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${CMAKE_INCLUDE_CURRENT_DIR}_2" [label="${CMAKE_INCLUDE_CURRENT_DIR}_2" shape=cds]
		"${CMAKE_INCLUDE_CURRENT_DIR}" [label="${CMAKE_INCLUDE_CURRENT_DIR}" shape=cds]
		ON [label=ON shape=ellipse]
		"SELECT_${Qt5Core_FOUND}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${Qt5Core_FOUND}" [label="${Qt5Core_FOUND}" shape=cds]
		find_package_9 [label=find_package_9 shape=parallelogram]
		"Qt5Core,REQUIRED" [label=CONCAT shape=doubleoctagon]
		REQUIRED [label=REQUIRED shape=ellipse]
		"Qt5Network,REQUIRED" [label=CONCAT shape=doubleoctagon]
		find_package_10 [label=find_package_10 shape=parallelogram]
		"SELECT_${Qt5Network_FOUND}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${Qt5Network_FOUND}" [label="${Qt5Network_FOUND}" shape=cds]
		Qt5Network [label=Qt5Network shape=ellipse]
		"LibSnoreToast,REQUIRED" [label=CONCAT shape=doubleoctagon]
		find_package_11 [label=find_package_11 shape=parallelogram]
		"SELECT_${LibSnoreToast_FOUND}_NOT ${SnoreToast->SnoreToastActions}" [label="SELECT
(NOT ${SnoreToast::SnoreToastActions})" shape=diamond]
		"SELECT_${LibSnoreToast_FOUND}_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		"${LibSnoreToast_FOUND}" [label="${LibSnoreToast_FOUND}" shape=cds]
		"NOT,${SnoreToast->SnoreToastActions}" [label=CONCAT shape=doubleoctagon]
		"${SnoreToast->SnoreToastActions}" [label="${SnoreToast->SnoreToastActions}" shape=cds]
		NOT [label=NOT shape=ellipse]
		LibSnoreToast [label=LibSnoreToast shape=ellipse]
		"libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" [label=CONCAT shape=doubleoctagon]
		set_target_properties [label=set_target_properties shape=parallelogram]
		EXPORT_NAME [label=EXPORT_NAME shape=ellipse]
		PROPERTIES [label=PROPERTIES shape=ellipse]
		libsnoretoast_2 [label=libsnoretoast_2 shape=box]
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" [label=CONCAT shape=doubleoctagon]
		target_link_libraries [label=target_link_libraries shape=parallelogram]
		"SnoreToast->SnoreToastActions_2" [label="SnoreToast->SnoreToastActions_2" shape=box]
		SnoreToastActions_2 [label=SnoreToastActions_2 shape=box]
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" [label=CONCAT shape=doubleoctagon]
		install_6 [label=install_6 shape=parallelogram]
		lib_2 [label=lib_2 shape=ellipse]
		DESTINATION_3 [label=DESTINATION_3 shape=ellipse]
		ARCHIVE [label=ARCHIVE shape=ellipse]
		lib [label=lib shape=ellipse]
		DESTINATION_2 [label=DESTINATION_2 shape=ellipse]
		LIBRARY [label=LIBRARY shape=ellipse]
		bin [label=bin shape=ellipse]
		DESTINATION [label=DESTINATION shape=ellipse]
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" [label=CONCAT shape=doubleoctagon]
		install_7 [label=install_7 shape=parallelogram]
		"include/snoretoast" [label="include/snoretoast" shape=ellipse]
		"${CMAKE_CURRENT_BINARY_DIR}/config.h" [label=CONCAT shape=doubleoctagon]
		"/config.h" [label="/config.h" shape=ellipse]
		CMAKE_CURRENT_BINARY_DIR [label=CMAKE_CURRENT_BINARY_DIR shape=cds]
		"${CMAKE_CURRENT_BINARY_DIR}/bin" [label=CONCAT shape=doubleoctagon]
		"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}" [label="${CMAKE_RUNTIME_OUTPUT_DIRECTORY}" shape=cds]
		"/bin" [label="/bin" shape=ellipse]
		"${CMAKE_CURRENT_BINARY_DIR}/bin_2" [label=CONCAT shape=doubleoctagon]
		"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}" [label="${CMAKE_LIBRARY_OUTPUT_DIRECTORY}" shape=cds]
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>" [label=CONCAT shape=doubleoctagon]
		">" [label=">" shape=ellipse]
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>_2" [label=CONCAT shape=doubleoctagon]
		"$<BUILD_INTERFACE:" [label="$<BUILD_INTERFACE:" shape=ellipse]
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>" [label=CONCAT shape=doubleoctagon]
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>,$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" [label=CONCAT shape=doubleoctagon]
		"$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" [label=CONCAT shape=doubleoctagon]
		"/include/snoretoast>" [label="/include/snoretoast>" shape=ellipse]
		CMAKE_INSTALL_PREFIX [label=CMAKE_INSTALL_PREFIX shape=cds]
		"$<INSTALL_INTERFACE:" [label="$<INSTALL_INTERFACE:" shape=ellipse]
		"${CMAKE_CURRENT_SOURCE_DIR}_3" [label="${CMAKE_CURRENT_SOURCE_DIR}_3" shape=cds]
		"./KDE/snoretoast/src_2" [label="./KDE/snoretoast/src_2" shape=ellipse]
		"snoretoastactions.h" [label="snoretoastactions.h" shape=ellipse]
		FILES [label=FILES shape=ellipse]
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" [label=CONCAT shape=doubleoctagon]
		install_8 [label=install_8 shape=parallelogram]
		"SnoreToast->" [label="SnoreToast->" shape=ellipse]
		NAMESPACE [label=NAMESPACE shape=ellipse]
		"lib/cmake/libsnoretoast" [label="lib/cmake/libsnoretoast" shape=ellipse]
		LibSnoreToastConfig [label=LibSnoreToastConfig shape=ellipse]
		EXPORT [label=EXPORT shape=ellipse]
		RUNTIME [label=RUNTIME shape=ellipse]
		snoretoast_2 [label=snoretoast_2 shape=box]
		"snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" [label=CONCAT shape=doubleoctagon]
		target_link_libraries_2 [label=target_link_libraries_2 shape=parallelogram]
		snoreretoastsources [label=snoreretoastsources shape=ellipse]
		"SnoreToast->LibSnoreToast_2" [label="SnoreToast->LibSnoreToast_2" shape=box]
		PRIVATE_2 [label=PRIVATE_2 shape=ellipse]
		"SnoreToast->SnoreToast_2" [label="SnoreToast->SnoreToast_2" shape=box]
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" [label=CONCAT shape=doubleoctagon]
		NOMINMAX_2 [label=NOMINMAX_2 shape=ellipse]
		WIN32_LEAN_AND_MEAN_2 [label=WIN32_LEAN_AND_MEAN_2 shape=ellipse]
		_UNICODE_2 [label=_UNICODE_2 shape=ellipse]
		UNICODE_2 [label=UNICODE_2 shape=ellipse]
		PRIVATE_3 [label=PRIVATE_3 shape=ellipse]
		"WIN32,main.cpp,${TOAST_ICON}" [label=CONCAT shape=doubleoctagon]
		TOAST_ICON [label=TOAST_ICON shape=cds]
		"main.cpp" [label="main.cpp" shape=ellipse]
		WIN32 [label=WIN32 shape=ellipse]
		TARGETS [label=TARGETS shape=ellipse]
		shlwapi [label=shlwapi shape=ellipse]
		runtimeobject [label=runtimeobject shape=ellipse]
		PUBLIC [label=PUBLIC shape=ellipse]
		"PUBLIC,__WRL_CLASSIC_COM_STRICT__" [label=CONCAT shape=doubleoctagon]
		__WRL_CLASSIC_COM_STRICT__ [label=__WRL_CLASSIC_COM_STRICT__ shape=ellipse]
		generate_export_header_5 [label=generate_export_header_5 shape=parallelogram]
		"snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" [label=CONCAT shape=doubleoctagon]
		"utils.cpp" [label="utils.cpp" shape=ellipse]
		"linkhelper.cpp" [label="linkhelper.cpp" shape=ellipse]
		"toasteventhandler.cpp" [label="toasteventhandler.cpp" shape=ellipse]
		"snoretoasts.cpp" [label="snoretoasts.cpp" shape=ellipse]
		Qt5Core [label=Qt5Core shape=ellipse]
		"SELECT_PROJECT_NAME_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		PROJECT_NAME_2 [label=PROJECT_NAME_2 shape=box]
		"\"main.cpp\"_2" [label=CONCAT shape=doubleoctagon]
		"\"main.cpp\"" [label="\"main.cpp\"" shape=ellipse]
		"SELECT_target_link_libraries_3_${BUILD_EXAMPLES}" [label="SELECT
${BUILD_EXAMPLES}" shape=diamond]
		target_link_libraries_3 [label=target_link_libraries_3 shape=parallelogram]
		"${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" [label=CONCAT shape=doubleoctagon]
		"SnoreToast->SnoreToastActions_3" [label="SnoreToast->SnoreToastActions_3" shape=ellipse]
		"Qt5->Network" [label="Qt5->Network" shape=ellipse]
		"Qt5->Core" [label="Qt5->Core" shape=ellipse]
		PROJECT_NAME [label=PROJECT_NAME shape=cds]
		BUILD_EXAMPLES [label=BUILD_EXAMPLES shape=larrow]
		"${CMAKE_AUTOMOC}" -> "SELECT_${CMAKE_AUTOMOC}_${BUILD_EXAMPLES}"
		"SELECT_${CMAKE_AUTOMOC}_${BUILD_EXAMPLES}" -> ON [label=TRUE]
		"SELECT_${CMAKE_AUTOMOC}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${BUILD_EXAMPLES}" -> BUILD_EXAMPLES
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}" -> "./KDE/snoretoast/examples_2" [label=TRUE]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}" -> "${CMAKE_CURRENT_SOURCE_DIR}" [label=FALSE]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${CMAKE_CURRENT_SOURCE_DIR}_4" -> "SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}"
		"${CMAKE_CURRENT_SOURCE_DIR}" -> "./KDE/snoretoast/"
		"${CMAKE_CURRENT_SOURCE_DIR}/cmake/" -> "${CMAKE_CURRENT_SOURCE_DIR}"
		"${CMAKE_CURRENT_SOURCE_DIR}/cmake/" -> "/cmake/"
		"${CMAKE_MODULE_PATH}" -> "${CMAKE_CURRENT_SOURCE_DIR}/cmake/"
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}_2" -> "./KDE/snoretoast/examples/qt_2" [label=TRUE]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}_2" -> "${CMAKE_CURRENT_SOURCE_DIR}" [label=FALSE]
		"SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}_2" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${CMAKE_CURRENT_SOURCE_DIR}_5" -> "SELECT_${CMAKE_CURRENT_SOURCE_DIR}_${BUILD_EXAMPLES}_2"
		"SELECT_${CMAKE_CXX_STANDARD}_${BUILD_EXAMPLES}" -> 11 [label=TRUE]
		"SELECT_${CMAKE_CXX_STANDARD}_${BUILD_EXAMPLES}" -> "${CMAKE_CXX_STANDARD}" [label=FALSE]
		"SELECT_${CMAKE_CXX_STANDARD}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${CMAKE_CXX_STANDARD}_2" -> "SELECT_${CMAKE_CXX_STANDARD}_${BUILD_EXAMPLES}"
		"${CMAKE_CXX_STANDARD}" -> 17
		"SELECT_${CMAKE_INCLUDE_CURRENT_DIR}_${BUILD_EXAMPLES}" -> ON [label=TRUE]
		"SELECT_${CMAKE_INCLUDE_CURRENT_DIR}_${BUILD_EXAMPLES}" -> "${CMAKE_INCLUDE_CURRENT_DIR}" [label=FALSE]
		"SELECT_${CMAKE_INCLUDE_CURRENT_DIR}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${CMAKE_INCLUDE_CURRENT_DIR}_2" -> "SELECT_${CMAKE_INCLUDE_CURRENT_DIR}_${BUILD_EXAMPLES}"
		"${CMAKE_INCLUDE_CURRENT_DIR}" -> ON
		"SELECT_${Qt5Core_FOUND}_${BUILD_EXAMPLES}" -> find_package_9 [label=TRUE]
		"SELECT_${Qt5Core_FOUND}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${Qt5Core_FOUND}" -> "SELECT_${Qt5Core_FOUND}_${BUILD_EXAMPLES}"
		find_package_9 -> "Qt5Core,REQUIRED" [label=COMMANDS]
		"Qt5Core,REQUIRED" -> Qt5Core
		"Qt5Core,REQUIRED" -> REQUIRED
		"Qt5Network,REQUIRED" -> Qt5Network
		"Qt5Network,REQUIRED" -> REQUIRED
		find_package_10 -> "Qt5Network,REQUIRED" [label=COMMANDS]
		"SELECT_${Qt5Network_FOUND}_${BUILD_EXAMPLES}" -> find_package_10 [label=TRUE]
		"SELECT_${Qt5Network_FOUND}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${Qt5Network_FOUND}" -> "SELECT_${Qt5Network_FOUND}_${BUILD_EXAMPLES}"
		"LibSnoreToast,REQUIRED" -> LibSnoreToast
		"LibSnoreToast,REQUIRED" -> REQUIRED
		find_package_11 -> "LibSnoreToast,REQUIRED" [label=COMMANDS]
		"SELECT_${LibSnoreToast_FOUND}_NOT ${SnoreToast->SnoreToastActions}" -> find_package_11 [label=TRUE]
		"SELECT_${LibSnoreToast_FOUND}_NOT ${SnoreToast->SnoreToastActions}" -> "NOT,${SnoreToast->SnoreToastActions}" [label=CONDITION]
		"SELECT_${LibSnoreToast_FOUND}_${BUILD_EXAMPLES}" -> "SELECT_${LibSnoreToast_FOUND}_NOT ${SnoreToast->SnoreToastActions}" [label=TRUE]
		"SELECT_${LibSnoreToast_FOUND}_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		"${LibSnoreToast_FOUND}" -> "SELECT_${LibSnoreToast_FOUND}_${BUILD_EXAMPLES}"
		"NOT,${SnoreToast->SnoreToastActions}" -> NOT
		"NOT,${SnoreToast->SnoreToastActions}" -> "${SnoreToast->SnoreToastActions}"
		"libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" -> libsnoretoast_2
		"libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" -> PROPERTIES
		"libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" -> EXPORT_NAME
		"libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" -> LibSnoreToast
		set_target_properties -> "libsnoretoast,PROPERTIES,EXPORT_NAME,LibSnoreToast" [label=COMMANDS]
		libsnoretoast_2 -> "snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" [label=Sources]
		libsnoretoast_2 -> "PUBLIC,__WRL_CLASSIC_COM_STRICT__" [label=Definitions]
		libsnoretoast_2 -> "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>" [label=INCLUDE_DIRECTORIES]
		libsnoretoast_2 -> "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>_2" [label=INTERFACE_INCLUDE_DIRECTORIES]
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" -> libsnoretoast_2
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" -> PUBLIC
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" -> runtimeobject
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" -> shlwapi
		"libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" -> "SnoreToast->SnoreToastActions_2"
		target_link_libraries -> "libsnoretoast,PUBLIC,runtimeobject,shlwapi,SnoreToast->SnoreToastActions" [label=COMMANDS]
		"SnoreToast->SnoreToastActions_2" -> SnoreToastActions_2 [label=Sources]
		SnoreToastActions_2 -> "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>,$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" [label=INTERFACE_INCLUDE_DIRECTORIES]
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> TARGETS
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> snoretoast_2
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> SnoreToastActions_2
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> EXPORT
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> LibSnoreToastConfig
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> RUNTIME
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> DESTINATION
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> bin
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> LIBRARY
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> DESTINATION_2
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> lib
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> ARCHIVE
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> DESTINATION_3
		"TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" -> lib_2
		install_6 -> "TARGETS,snoretoast,SnoreToastActions,EXPORT,LibSnoreToastConfig,RUNTIME,DESTINATION,bin,LIBRARY,DESTINATION,lib,ARCHIVE,DESTINATION,lib" [label=COMMANDS]
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" -> FILES
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" -> "snoretoastactions.h"
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" -> "${CMAKE_CURRENT_BINARY_DIR}/config.h"
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" -> DESTINATION
		"FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" -> "include/snoretoast"
		install_7 -> "FILES,snoretoastactions.h,${CMAKE_CURRENT_BINARY_DIR}/config.h,DESTINATION,include/snoretoast" [label=COMMANDS]
		"${CMAKE_CURRENT_BINARY_DIR}/config.h" -> CMAKE_CURRENT_BINARY_DIR
		"${CMAKE_CURRENT_BINARY_DIR}/config.h" -> "/config.h"
		"${CMAKE_CURRENT_BINARY_DIR}/bin" -> CMAKE_CURRENT_BINARY_DIR
		"${CMAKE_CURRENT_BINARY_DIR}/bin" -> "/bin"
		"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}" -> "${CMAKE_CURRENT_BINARY_DIR}/bin"
		"${CMAKE_CURRENT_BINARY_DIR}/bin_2" -> CMAKE_CURRENT_BINARY_DIR
		"${CMAKE_CURRENT_BINARY_DIR}/bin_2" -> "/bin"
		"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}" -> "${CMAKE_CURRENT_BINARY_DIR}/bin_2"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>" -> "$<BUILD_INTERFACE:"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>" -> CMAKE_CURRENT_BINARY_DIR
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>" -> ">"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>_2" -> "$<BUILD_INTERFACE:"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>_2" -> CMAKE_CURRENT_BINARY_DIR
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>_2" -> ">"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>" -> "$<BUILD_INTERFACE:"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>" -> "${CMAKE_CURRENT_SOURCE_DIR}_3"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>" -> ">"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>,$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" -> "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>,$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" -> "$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>"
		"$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" -> "$<INSTALL_INTERFACE:"
		"$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" -> CMAKE_INSTALL_PREFIX
		"$<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/snoretoast>" -> "/include/snoretoast>"
		"${CMAKE_CURRENT_SOURCE_DIR}_3" -> "./KDE/snoretoast/src_2"
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> EXPORT
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> LibSnoreToastConfig
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> DESTINATION
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> "lib/cmake/libsnoretoast"
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> NAMESPACE
		"EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" -> "SnoreToast->"
		install_8 -> "EXPORT,LibSnoreToastConfig,DESTINATION,lib/cmake/libsnoretoast,NAMESPACE,SnoreToast->" [label=COMMANDS]
		snoretoast_2 -> "WIN32,main.cpp,${TOAST_ICON}" [label=Sources]
		snoretoast_2 -> "PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" [label=Definitions]
		"snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" -> snoretoast_2
		"snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" -> PRIVATE_2
		"snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" -> "SnoreToast->LibSnoreToast_2"
		"snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" -> snoreretoastsources
		target_link_libraries_2 -> "snoretoast,PRIVATE,SnoreToast->LibSnoreToast,snoreretoastsources" [label=COMMANDS]
		"SnoreToast->LibSnoreToast_2" -> libsnoretoast_2 [label=Sources]
		"SnoreToast->SnoreToast_2" -> snoretoast_2 [label=Sources]
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" -> PRIVATE_3
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" -> UNICODE_2
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" -> _UNICODE_2
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" -> WIN32_LEAN_AND_MEAN_2
		"PRIVATE,UNICODE,_UNICODE,WIN32_LEAN_AND_MEAN,NOMINMAX" -> NOMINMAX_2
		"WIN32,main.cpp,${TOAST_ICON}" -> WIN32
		"WIN32,main.cpp,${TOAST_ICON}" -> "main.cpp"
		"WIN32,main.cpp,${TOAST_ICON}" -> TOAST_ICON
		"PUBLIC,__WRL_CLASSIC_COM_STRICT__" -> PUBLIC
		"PUBLIC,__WRL_CLASSIC_COM_STRICT__" -> __WRL_CLASSIC_COM_STRICT__
		generate_export_header_5 -> libsnoretoast_2 [label=COMMANDS]
		"snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" -> "snoretoasts.cpp"
		"snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" -> "toasteventhandler.cpp"
		"snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" -> "linkhelper.cpp"
		"snoretoasts.cpp,toasteventhandler.cpp,linkhelper.cpp,utils.cpp" -> "utils.cpp"
		"SELECT_PROJECT_NAME_${BUILD_EXAMPLES}" -> "\"main.cpp\"_2" [label=TRUE]
		"SELECT_PROJECT_NAME_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		PROJECT_NAME_2 -> "SELECT_PROJECT_NAME_${BUILD_EXAMPLES}" [label=Sources]
		"\"main.cpp\"_2" -> "\"main.cpp\""
		"SELECT_target_link_libraries_3_${BUILD_EXAMPLES}" -> target_link_libraries_3 [label=TRUE]
		"SELECT_target_link_libraries_3_${BUILD_EXAMPLES}" -> "${BUILD_EXAMPLES}" [label=CONDITION]
		target_link_libraries_3 -> "${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" [label=COMMANDS]
		"${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" -> PROJECT_NAME
		"${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" -> "Qt5->Core"
		"${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" -> "Qt5->Network"
		"${PROJECT_NAME},Qt5->Core,Qt5->Network,SnoreToast->SnoreToastActions" -> "SnoreToast->SnoreToastActions_3"
	}
	subgraph cluster_1 {
		"REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" [label=CONCAT shape=doubleoctagon]
		string_0 [label=string_0 shape=parallelogram]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${MSVC}" [label="SELECT
${MSVC}" shape=diamond]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${BUILD_STATIC_RUNTIME}" [label="SELECT
${BUILD_STATIC_RUNTIME}" shape=diamond]
		"${CMAKE_CXX_FLAGS_${_bt}}" [label="${CMAKE_CXX_FLAGS_${_bt}}" shape=cds]
		foreach [label=foreach shape=parallelogram]
		"${CMAKE_CXX_FLAGS_${_bt}}_1" [label="${CMAKE_CXX_FLAGS_${_bt}}_1" shape=cds]
		"${_bt}" [label="${_bt}" shape=cds]
		"${CMAKE_CXX_FLAGS_${_bt}}_2" [label=CONCAT shape=doubleoctagon]
		"}" [label="}" shape=ellipse]
		"${CMAKE_CXX_FLAGS_" [label="${CMAKE_CXX_FLAGS_" shape=ellipse]
		"SELECT_${_bt}_${BUILD_STATIC_RUNTIME}" [label="SELECT
${BUILD_STATIC_RUNTIME}" shape=diamond]
		"${BUILD_STATIC_RUNTIME}" [label="${BUILD_STATIC_RUNTIME}" shape=cds]
		BUILD_STATIC_RUNTIME [label=BUILD_STATIC_RUNTIME shape=larrow]
		"SELECT_${_bt}_${MSVC}" [label="SELECT
${MSVC}" shape=diamond]
		"${MSVC}" [label="${MSVC}" shape=cds]
		"DEBUG,RELEASE,RELWITHDEBINFO" [label=CONCAT shape=doubleoctagon]
		RELWITHDEBINFO [label=RELWITHDEBINFO shape=ellipse]
		RELEASE [label=RELEASE shape=ellipse]
		DEBUG [label=DEBUG shape=ellipse]
		"\"/MT\"" [label="\"/MT\"" shape=ellipse]
		"\"/MD\"" [label="\"/MD\"" shape=ellipse]
		REPLACE [label=REPLACE shape=ellipse]
		"REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" -> REPLACE
		"REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" -> "\"/MD\""
		"REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" -> "\"/MT\""
		"REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" -> "${CMAKE_CXX_FLAGS_${_bt}}_2"
		string_0 -> "REPLACE,\"/MD\",\"/MT\",${CMAKE_CXX_FLAGS_${_bt}}" [label=COMMANDS]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${MSVC}" -> string_0 [label=TRUE]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${MSVC}" -> "${MSVC}" [label=CONDITION]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${BUILD_STATIC_RUNTIME}" -> "SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${MSVC}" [label=TRUE]
		"SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${BUILD_STATIC_RUNTIME}" -> "${BUILD_STATIC_RUNTIME}" [label=CONDITION]
		"${CMAKE_CXX_FLAGS_${_bt}}" -> "SELECT_${CMAKE_CXX_FLAGS_${_bt}}_${BUILD_STATIC_RUNTIME}"
		foreach -> "${_bt}" [label=COMMANDS]
		foreach -> "${CMAKE_CXX_FLAGS_${_bt}}" [label=DEPENDS]
		"${CMAKE_CXX_FLAGS_${_bt}}_1" -> foreach
		"${_bt}" -> "SELECT_${_bt}_${BUILD_STATIC_RUNTIME}"
		"${CMAKE_CXX_FLAGS_${_bt}}_2" -> "${CMAKE_CXX_FLAGS_"
		"${CMAKE_CXX_FLAGS_${_bt}}_2" -> "${_bt}"
		"${CMAKE_CXX_FLAGS_${_bt}}_2" -> "}"
		"SELECT_${_bt}_${BUILD_STATIC_RUNTIME}" -> "SELECT_${_bt}_${MSVC}" [label=TRUE]
		"SELECT_${_bt}_${BUILD_STATIC_RUNTIME}" -> "${BUILD_STATIC_RUNTIME}" [label=CONDITION]
		"${BUILD_STATIC_RUNTIME}" -> BUILD_STATIC_RUNTIME
		"SELECT_${_bt}_${MSVC}" -> "DEBUG,RELEASE,RELWITHDEBINFO" [label=TRUE]
		"SELECT_${_bt}_${MSVC}" -> "${MSVC}" [label=CONDITION]
		"DEBUG,RELEASE,RELWITHDEBINFO" -> DEBUG
		"DEBUG,RELEASE,RELWITHDEBINFO" -> RELEASE
		"DEBUG,RELEASE,RELWITHDEBINFO" -> RELWITHDEBINFO
	}
	subgraph cluster_2 {
		"eb1fdd5b-8f70-4b5a-b230-998a2dc19303" [label="eb1fdd5b-8f70-4b5a-b230-998a2dc19303" shape=ellipse]
		"${SNORETOAST_CALLBACK_GUID}" [label="${SNORETOAST_CALLBACK_GUID}" shape=cds]
		"${SNORETOAST_CALLBACK_GUID}" -> "eb1fdd5b-8f70-4b5a-b230-998a2dc19303"
	}
	subgraph cluster_3 {
		configure_file [label=configure_file shape=parallelogram]
		"config.h.in,config.h,@ONLY" [label=CONCAT shape=doubleoctagon]
		"@ONLY" [label="@ONLY" shape=ellipse]
		"config.h" [label="config.h" shape=ellipse]
		"config.h.in" [label="config.h.in" shape=ellipse]
		configure_file -> "config.h.in,config.h,@ONLY" [label=COMMANDS]
		"config.h.in,config.h,@ONLY" -> "config.h.in"
		"config.h.in,config.h,@ONLY" -> "config.h"
		"config.h.in,config.h,@ONLY" -> "@ONLY"
	}
	subgraph cluster_4 {
		include_3 [label=include_3 shape=parallelogram]
		"cmakerc/CMakeRC" [label="cmakerc/CMakeRC" shape=ellipse]
		include_3 -> "cmakerc/CMakeRC" [label=DEPENDS]
	}
	subgraph cluster_5 {
		include [label=include shape=parallelogram]
		GenerateExportHeader [label=GenerateExportHeader shape=ellipse]
		include -> GenerateExportHeader [label=DEPENDS]
	}
	subgraph cluster_6 {
		"${CMAKE_CURRENT_SOURCE_DIR}_2" [label="${CMAKE_CURRENT_SOURCE_DIR}_2" shape=cds]
		"./KDE/snoretoast/data_2" [label="./KDE/snoretoast/data_2" shape=ellipse]
		"${CMAKE_CURRENT_SOURCE_DIR}_2" -> "./KDE/snoretoast/data_2"
	}
	subgraph cluster_7 {
		SnoreMacros [label=SnoreMacros shape=ellipse]
		include_2 [label=include_2 shape=parallelogram]
		include_2 -> SnoreMacros [label=DEPENDS]
	}
	subgraph cluster_8 {
		"${CMAKE_SOURCE_DIR}" [label="${CMAKE_SOURCE_DIR}" shape=cds]
		"./KDE/snoretoast/_2" [label="./KDE/snoretoast/_2" shape=ellipse]
		"${CMAKE_SOURCE_DIR}" -> "./KDE/snoretoast/_2"
	}
}
